#!/usr/bin/env bash
set -euo pipefail

#
# Prepare a system to automatically unlock its LUKS-encrypted root on
# the next boot.
#
# This script temporarily enrolls a LUKS token in the TPM, scheduling a
# service to remove it on the next boot.
#
# Current limitations:
# - assumes systemd
#

source /usr/lib/passless-boot-tpm_lib.sh

configure_tpm_autounlock ()
{
	dm_path="$(cryptroot_path)"
	dm_name="$(dmcrypt_name "$dm_path")"
	device="$(cryptroot_device "$dm_path")"

	detect_encrypted_rootfs "$dm_name"
	if ! grep -q -e "$device_uuid" -e "$device" /etc/cmdline; then
		echo "Error: rootfs already auto-mounted via cmdline."
		echo "Cowardly refusing to enable passless boot." 
		exit 21
	fi

	enroll_re="New TPM2 token enrolled as key slot ([0-9]+)\."
	systemd-cryptenroll "$device"
	enroll_output="$(systemd-cryptenroll --tpm2-device=auto --tpm2-pcrs="" "$device")"
	if [[ "$enroll_output" =~ $enroll_re ]]; then
		luks_slot="${BASH_REMATCH[1]}"
	else
		echo "Error: couldn't identify LUKS keyslot used for temporary key."
		echo "Manual cleanup required."
		exit 22
	fi
	# TODO: test that systemd can open the LUKS disk
	# sudo systemctl start cryptsetup.target
	# systemctl is-active systemd-cryptsetup@passless_boot_tpm.service

	if [ sd-encrypt-crypttab != "$mount_type" ]; then
		not_yet_implemented
	fi
	if ! grep -q "^$dm_name.\+tpm2-device=auto" /etc/crypttab.initramfs; then
		local sp="[:space:]"
		sed \
			--regexp-extended \
			--in-place .bak \
			"s/^($dm_name[$sp]+[^$sp]+[$sp]+[^$sp]+[$sp]+)([^$sp]+)/\1tpm2-device=auto,\2/" \
			/etc/crypttab.initramfs
	fi
}

main ()
{
	luks_slot=-1

	configure_tpm_autounlock
	if [ "$luks_slot" -lt 0 ]; then
		echo "Error: couldn't identify LUKS keyslot used for temporary key."
		echo "Manual cleanup required."
		exit 10
	fi

	service_name="passless-boot-tpm_cleanup@$luks_slot.service"
	echo systemctl enable --quiet "$service_name"
	if ! systemctl is-enabled "$service_name"; then
		echo "Error: couldn't enable $service_name on next boot."
		echo "Manual cleanup required."
		exit 11
	fi

	if command -v rguard 2>&1 >/dev/null; then
		rguard -0 --loglevel error
	fi
}

main
